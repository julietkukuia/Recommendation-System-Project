# 🗓 Day 2 – Timestamp Diagnostics & Data Cleaning

**Date:** 2025-08-10  
**Author:** Juliet Fafali Kukuia  
**Project:** Personalised Recommendation System using E-commerce Behaviour Data  

---

## ✅ Tasks Completed
- [x] Investigated persistent `merge_asof` sorting errors by running per-`itemid` timestamp diagnostics.
- [x] Identified groups with **non-monotonic** timestamps and duplicate entries.
- [x] Normalized all timestamps to a consistent format (`datetime64[ns]`).
- [x] Removed duplicate `(itemid, timestamp)` pairs to prevent merge conflicts.
- [x] Re-sorted datasets (`events_sorted` and `cat_sorted`) using **stable mergesort** to preserve order.
- [x] Began testing forward-fill approach for category assignment as a fallback method.

---

## 📊 Key Findings / Observations
- Multiple `itemid` groups contained timestamps that were **out of order**, often caused by inconsistent data recording.
- Some timestamps were stored as **strings** while others were UNIX integers — causing merge alignment issues.
- Duplicates in `(itemid, timestamp)` pairs could cause data leakage in recommendations if not handled.
- After cleaning, the number of affected rows was less than **5%** of total data, but enough to break `merge_asof`.

---

## ⚠️ Challenges & Fixes
| Challenge | How It Was Resolved |
|-----------|---------------------|
| Mixed timestamp formats | Converted all to `pd.to_datetime` before merging. |
| Duplicate `(itemid, timestamp)` rows | Dropped duplicates while keeping the first occurrence. |
| Non-monotonic order within groups | Applied `sort_values(['itemid', 'timestamp'], kind='mergesort')`. |

---

## 🔜 Next Steps
- [ ] Retry `merge_asof` after final cleaning.
- [ ] If issues persist, fully implement forward-fill time alignment method.
- [ ] Integrate **category_tree.csv** for category hierarchy mapping.
- [ ] Start initial exploratory data analysis (EDA) on enriched dataset.

---

## 📂 Files Updated / Created
| File | Description |
|------|-------------|
| `notebooks/data_cleaning.ipynb` | Added timestamp diagnostics and cleaning functions. |
| `data/events_sorted.csv` | Cleaned & sorted events dataset. |
| `data/cat_sorted.csv` | Cleaned & sorted category mapping dataset. |

---

## 🖼 Screenshots
*(No visualisations yet — will add during EDA phase.)*

---

## 🔗 Related Links
- [Main Project README](../README.md)
- [Previous Day’s Log](day1.md)

---

## 🧠 Key Learnings
- Even a small percentage of unsorted keys can completely block time-aware joins.
- Cleaning timestamp formats early prevents cascading merge errors.
- Stable sorting (`mergesort`) is safer for large datasets where order matters.

---
